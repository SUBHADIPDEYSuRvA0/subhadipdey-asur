<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>V-Sync Developer Login</title>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/ScrollTrigger.min.js"></script>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Exo+2:wght@500;700&family=Fira+Code:wght@400&display=swap');
    body {
      background: linear-gradient(135deg, #000000 0%, #000000 100%);
      min-height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      font-family: 'Fira Code', monospace;
      overflow: hidden;
      position: relative;
    }
    .login-container {
      background: rgba(0, 0, 0, 0.9);
      backdrop-filter: blur(20px);
      border: 2px solid rgba(196, 218, 0, 0.253);
      border-radius: 24px;
      padding: 4rem 3rem;
      width: 100%;
      max-width: 500px;
      box-shadow: 0 0 60px rgba(234, 246, 59, 0.185);
      position: relative;
      z-index: 10;
      overflow: hidden;
    }
    .login-container::before {
      content: '';
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;

      animation: pulse-neon 5s ease-in-out infinite;
      z-index: -1;
    }
    @keyframes pulse-neon {
      0% { transform: scale(1); opacity: 0.4; }
      50% { transform: scale(1.4); opacity: 0.6; }
      100% { transform: scale(1); opacity: 0.4; }
    }
    .logo-container {
      display: flex;
      justify-content: center;
      margin-bottom: 3.5rem;
    }
    .v-logo {
      width: 120px;
      height: 120px;
      /* filter: drop-shadow(0 0 15px rgba(255, 255, 255, 0.9)) drop-shadow(0 0 25px rgba(59, 130, 246, 0.6)); */
    }
    .form-group {
      margin-bottom: 2.5rem;
      position: relative;
      perspective: 1000px;
    }
    .form-group label {
      color: #a5b4fc;
      font-size: 0.95rem;
      font-weight: 500;
      font-family: 'Exo 2', sans-serif;
      position: absolute;
      top: -1rem;
      left: 1.5rem;
      background: rgba(20, 20, 30, 0.95);
      padding: 0.25rem 0.75rem;
      border-radius: 6px;
      transition: all 0.3s ease;
      z-index: 1;
    }
    .form-group input {
      width: 100%;
      padding: 1.3rem 1.5rem;
      background: rgba(255, 255, 255, 0.08);
      border: 2px solid rgba(59, 130, 246, 0.5);
      border-radius: 14px;
      color: #ffffff;
      font-size: 1.1rem;
      font-family: 'Fira Code', monospace;
      transition: all 0.3s ease;
      box-shadow: 0 0 10px rgba(207, 234, 51, 0.2);
    }
    .form-group input:focus {
      outline: none;
      border-color: #fefdb4;
      box-shadow: 0 0 20px rgba(222, 234, 51, 0.6); 
      transform: translateZ(10px);
    }
    .form-group input::placeholder {
      color: rgba(255, 255, 255, 0.35);
    }
    .login-button {
      width: 100%;
      padding: 1.3rem;
      background: linear-gradient(90deg, #3a6aed, #3bbbf6);
      border: none;
      border-radius: 14px;
      color: #ffffff;
      font-weight: 700;
      font-size: 1.3rem;
      font-family: 'Exo 2', sans-serif;
      cursor: pointer;
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
      text-transform: uppercase;
      letter-spacing: 3px;
      box-shadow: 0 0 20px rgba(59, 130, 246, 0.5);
    }
    .login-button:hover {
      transform: translateY(-4px) scale(1.02);
      box-shadow: 0 0 30px rgba(234, 201, 51, 0.8);
      background: linear-gradient(90deg, #9333ea, #60a5fa);
    }
    .login-button::after {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.5), transparent);
      transition: 0.6s;
    }
    .login-button:hover::after {
      left: 100%;
    }
    .particle-container {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
      z-index: 0;
    }
    .particle {
      position: absolute;
      width: 8px;
      height: 8px;
      background: rgba(255, 255, 255, 0.8);
      border-radius: 50%;
      box-shadow: 0 0 12px rgba(246, 227, 59, 0.6);
      animation: float 8s infinite;
    }
    @keyframes float {
      0% { transform: translateY(100vh) scale(1); opacity: 0.9; }
      50% { opacity: 0.5; }
      100% { transform: translateY(-100vh) scale(0.4); opacity: 0; }
    }
    .error-message {
      color: #ff4d4d;
      font-size: 0.95rem;
      font-family: 'Exo 2', sans-serif;
      text-align: center;
      margin-top: 2rem;
      opacity: 0;
      transition: opacity 0.3s ease;
    }
    .error-message.show {
      opacity: 1;
    }
  </style>
</head>
<body>
  <div class="particle-container" id="particle-container"></div>
  <div class="login-container">
    <div class="logo-container">
      <img src="/logo/logo.png" alt="">
        <path id="v-path" d="M20 80 L50 20 L80 80" stroke="#ffffff" stroke-width="8" fill="none"
              stroke-linecap="round" stroke-linejoin="round">
          <animate attributeName="stroke" values="#7c3aed;#3b82f6;#9333ea;#7c3aed" dur="4s" repeatCount="indefinite" />
        </path>
        <path id="v-glow" d="M20 80 L50 20 L80 80" stroke="rgba(147, 51, 234, 0.5)" stroke-width="12" fill="none"
              stroke-linecap="round" stroke-linejoin="round" filter="url(#glow)">
          <animate attributeName="stroke" values="#7c3aed;#3b82f6;#9333ea;#7c3aed" dur="4s" repeatCount="indefinite" />
        </path>
        <defs>
          <filter id="glow">
            <feGaussianBlur stdDeviation="3" result="glow" />
            <feMerge>
              <feMergeNode in="glow" />
              <feMergeNode in="SourceGraphic" />
            </feMerge>
          </filter>
        </defs>
      </svg>
    </div>
    <form class="login-form" action="/Asur/auth/login" method="POST" onsubmit="return validateForm()">
      <div class="form-group">
        <label for="email">Email Interface</label>
        <input type="email" name="email" id="email" required autocomplete="off" placeholder="Enter your email" />
      </div>
      <div class="form-group">
        <label for="password">Access Key</label>
        <input type="password" name="password" id="password" required autocomplete="off" placeholder="Enter your access key" />
      </div>
      <button type="submit" class="login-button">Sync Now</button>
      <div class="error-message" id="error-message"></div>
    </form>
  </div>

  <script>
    // GSAP Timeline for advanced animation model
    const tl = gsap.timeline({ defaults: { ease: "power4.out" } });

    tl.from(".login-container", {
      opacity: 0,
      scale: 0.5,
      rotationX: 60,
      duration: 1.8,
      transformOrigin: "center"
    })
    .from(".v-logo", {
      opacity: 0,
      scale: 0.2,
      rotationY: 180,
      duration: 1.5,
      ease: "back.out(1.7)",
      onStart: () => {
        gsap.to("#v-path, #v-glow", {
          strokeWidth: [8, 12, 8],
          duration: 2,
          repeat: -1,
          yoyo: true,
          ease: "sine.inOut"
        });
      }
    }, "-=1.2")
    .from(".form-group", {
      opacity: 0,
      x: -250,
      rotationY: 30,
      duration: 1,
      stagger: 0.3
    }, "-=1")
    .from(".login-button", {
      
      duration: 1.3,
      ease: "elastic.out(1, 0.4)"
    }, "-=0.5");

    // Input focus animations with 3D effect
    document.querySelectorAll('.form-group input').forEach(input => {
      input.addEventListener('focus', () => {
        gsap.to(input, {
          borderColor: "#d8b4fe",
          boxShadow: "0 0 20px rgba(147, 51, 234, 0.6)",
          transform: "translateZ(10px)",
          duration: 0.4,
          ease: "power2.out"
        });
        gsap.to(input.parentElement.querySelector('label'), {
          color: "#ffffff",
          scale: 1.1,
          translateZ: "10px",
          duration: 0.3
        });
      });
      input.addEventListener('blur', () => {
        gsap.to(input, {
          borderColor: "rgba(59, 130, 246, 0.5)",
          boxShadow: "0 0 10px rgba(147, 51, 234, 0.2)",
          transform: "translateZ(0)",
          duration: 0.4
        });
        gsap.to(input.parentElement.querySelector('label'), {
          color: "#a5b4fc",
          scale: 1,
          translateZ: "0",
          duration: 0.3
        });
      });
    });

    // Form validation
    function validateForm() {
      const email = document.getElementById('email').value;
      const password = document.getElementById('password').value;
      const errorMessage = document.getElementById('error-message');

      if (!email.includes('@') || password.length < 6) {
        errorMessage.textContent = 'Invalid email or access key (min 6 characters)';
        errorMessage.classList.add('show');
        gsap.fromTo(errorMessage, 
          { opacity: 0, y: 15 }, 
          { opacity: 1, y: 0, duration: 0.5 }
        );
        return false;
      }
      return true;
    }

    // Particle animation system
    const particleContainer = document.getElementById('particle-container');
    function createParticle() {
      const particle = document.createElement('div');
      particle.className = 'particle';
      particle.style.left = `${Math.random() * 100}vw`;
      particle.style.background = `hsl(${Math.random() * 60 + 270}, 80%, 60%)`;
      particleContainer.appendChild(particle);
      setTimeout(() => particle.remove(), 8000);
    }

    // Generate particles at intervals
    setInterval(createParticle, 200);

    // Initial burst of particles
    for (let i = 0; i < 30; i++) {
      setTimeout(createParticle, i * 80);
    }
  </script>
</body>
</html>